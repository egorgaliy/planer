// –ú–ê–°–°–ò–í –° –ò–ö–û–ù–ö–ê–ú–ò
function getRandIcon () {
    let arr = ["üòÇ","üòù","üòÅ","üò±","üëâ","üôå","üçª","üî•","üåà","‚òÄ","üéà","üåπ","üíÑ","üéÄ","‚öΩ","üéæ","üèÅ","üò°","üëø","üêª","üê∂","üê¨","üêü","üçÄ","üëÄ","üöó","üçé","üíù","üíô","üëå","‚ù§","üòç","üòâ","üòì","üò≥","üí™","üí©","üç∏","üîë","üíñ","üåü","üéâ","üå∫","üé∂","üë†","üèà","‚öæ","üèÜ","üëΩ","üíÄ","üêµ","üêÆ","üê©","üêé","üí£","üëÉ","üëÇ","üçì","üíò","üíú","üëä","üíã","üòò","üòú","üòµ","üôè","üëã","üöΩ","üíÉ","üíé","üöÄ","üåô","üéÅ","‚õÑ","üåä","‚õµ","üèÄ","üé±","üí∞","üë∂","üë∏","üê∞","üê∑","üêç","üê´","üî´","üëÑ","üö≤","üçâ","üíõ","üíö"];
    return arr[Math.floor(Math.random() * arr.length)]
}

// –ö–ù–û–ü–ö–ê ENTER –û–¢–ü–†–ê–í–õ–Ø–ï–¢ –§–û–†–ú–£
input.addEventListener("keyup", function(event) {
    if (event.keyCode === 13) {
        event.preventDefault();
        document.getElementById("go").click();
    }
});

// –°–ù–ò–ú–ê–ï–ú –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ó–ê–î–ê–ß–ò –ü–†–ò –ù–ê–ß–ê–õ–ï –ù–û–í–û–ô
function deleteActiveTask() {
    tasks.forEach(task => {
        if(task.active) {
            task.active = false;
            return;
        }
    })
}

// –í–´–î–ï–õ–Ø–ï–ú –ê–ö–¢–ò–í–ù–´–ï –ó–ê–î–ê–ß–ò
function stylingActiveTask () {
    let activeElem = null;
    const punct = document.querySelectorAll('.task');
    punct.forEach((task, index) => {
        task.addEventListener('click', (event) => {
            if(activeElem != null) {
                activeElem.classList.remove('active');
            }
            task.classList.add('active');
            deleteActiveTask();
            tasks[index].active = true;
            updateLocal();
            activeElem = task;
        })
    })
}

// –ü–ï–†–ï–ú–ï–ù–ù–´–ï

const addTaskBtn = document.getElementById('go');
const descTaskInp = document.getElementById('input');
const todos = document.querySelector('.todos');
const delTask = document.querySelector('#delite');
const updateLocal = () => {localStorage.setItem('tasks', JSON.stringify(tasks));}
const fillHtmlList = () => {
    todos.innerHTML = '';
    if(tasks.length > 0) {
        tasks.forEach((item, index) => {
            todos.innerHTML += createTemplate(item, index);
        })
    }  
}

// –®–ê–ë–õ–û–ù –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ó–ê–î–ê–ß
function createTemplate(task, index) {
    let activeClass = '';
    if (task.active == true) {
        activeClass = 'active';
    }
    return `
        <div class="task ${activeClass}">
            <div class="emo"><span class=icon> ${task.icon} </span></div>
            <p>${task.description}</p>
        </div> 
    `;
}

// –ü–†–û–í–ï–†–Ø–ï–ú –•–†–ê–ù–ò–õ–ò–©–ï
let tasks;
!localStorage.tasks ? tasks = [] : tasks = JSON.parse(localStorage.getItem('tasks'));

// –î–û–ë–ê–í–õ–Ø–ï–ú –ó–ê–î–ê–ß–£
function Task(description) {
    this.description = description;
    this.complited = false;
    this.active = false;
    this.icon = getRandIcon ();
}

fillHtmlList();

// –û–¢–ü–†–ê–í–õ–Ø–ï–ú –§–û–†–ú–£ –ü–û –ö–ù–û–ü–ö–ï
addTaskBtn.addEventListener('click', () => {
    if (descTaskInp.value == '' || descTaskInp.value == ' ' || descTaskInp.value == '  ') {return};
    tasks.push(new Task(descTaskInp.value));
    updateLocal();
    fillHtmlList();
    stylingActiveTask ();
    descTaskInp.value = '';
})  

// –ß–ò–°–¢–ò–ú –°–ü–ò–°–û–ö –ü–û –ö–ù–û–ö–ü–ö–ï
delTask.addEventListener('click', () => {
    tasks = [];
    updateLocal();
    fillHtmlList();
    })  

stylingActiveTask ();








//–æ–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
var base = 60;
var clocktimer, dateObj, dh, dm, ds, ms;
var readout = '';
var h = 1,
    m = 1,
    tm = 1,
    s = 0,
    ts = 0,
    ms = 0,
    init = 0;

//—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—è
function Clear–°lock() {
    clearTimeout(clocktimer);
    h = 1;
    m = 1;
    tm = 1;
    s = 0;
    ts = 0;
    ms = 0;
    init = 0;
    readout = '00:00:00';
    document.querySelector('#stopwatch').value = readout;
}

//—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞
function StartTIME() {
    var cdateObj = new Date();
         var t = (cdateObj.getTime() - dateObj.getTime()) - (s * 1000);
    if (t > 999) {
    s++;
    }
          if (s >= (m * base)) {
    ts = 0;
    m++;
    } else {
    ts = parseInt((ms / 100) + s);
    if (ts >= base) {
      ts = ts - ((m - 1) * base);
    }
    }
  if (m > (h * base)) {
    tm = 1;
    h++;
    } else {
    tm = parseInt((ms / 100) + m);
    if (tm >= base) {
      tm = tm - ((h - 1) * base);
    }
    }
    ms = Math.round(t / 10);
    if (ms > 99) {
    ms = 0;
    }
    if (ms == 0) {
    ms = '00';
    }
    if (ms > 0 && ms <= 9) {
    ms = '0' + ms;
  }
  if (ts > 0) {
    ds = ts;
    if (ts < 10) {
      ds = '0' + ts;
    }
  } else {
    ds = '00';
  }
  dm = tm - 1;
  if (dm > 0) {
    if (dm < 10) {
      dm = '0' + dm;
    }
  } else {
    dm = '00';
  }
  dh = h - 1;
  if (dh > 0) {
    if (dh < 10) {
      dh = '0' + dh;
    }
  } else {
    dh = '00';
  }
  readout = dh + ':' + dm + ':' + ds;
  document.querySelector('#stopwatch').value = readout;
  clocktimer = setTimeout("StartTIME()", 1);
}

//–§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
function StartStop() {
    if (init == 0) {
        Clear–°lock();
        dateObj = new Date();
        StartTIME();
        init = 1;
    } else {
        clearTimeout(clocktimer);
        init = 0;
    }
}